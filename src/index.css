@tailwind base;
@tailwind components;
@tailwind utilities;

/* Modal styles for mobile */
.modal-open {
  overflow: hidden;
}

/* Fix for iOS Safari - good to keep */
@supports (-webkit-touch-callout: none) {
  .modal-open {
    position: fixed;
    width: 100%;
    height: 100%;
  }
}

/* Modal container styles */
.modal-container {
  @apply fixed inset-0 z-50 flex items-center justify-center p-4; /* 16px padding on all sides */
  background-color: rgba(0, 0, 0, 0.5);
  touch-action: none;
  /* Use 100dvh for the container, ensuring it truly fills the dynamic viewport */
  height: 100dvh; /* Modern, dynamic viewport height */
  height: 100vh; /* Fallback for older browsers / systems */
}

/* Modal content styles */
.modal-content {
  @apply bg-white dark:bg-gray-800 rounded-xl shadow-xl w-full flex flex-col;
  /*
   * CRITICAL CALCULATION HERE:
   * 100dvh (or 100vh fallback) is the total available screen height.
   * We subtract:
   * - 32px: This comes from the p-4 (16px top + 16px bottom) on the .modal-container.
   * - A combined value for header, footer, and *any extra space* you want to reserve.
   * Let's assume your header is approx 64px, footer approx 80px.
   * 64px (header) + 80px (footer) = 144px.
   * Let's add some extra buffer, say 40px, for general breathing room or unforeseen elements.
   * 144px + 40px = 184px.
   * - safe-area-insets: These account for notches/dynamic islands. Using 0px as fallback
   * if env() isn't supported, as the 100dvh and main subtractions should cover most cases.
   */
  max-height: calc(100dvh - 32px - 184px - env(safe-area-inset-top, 0px) - env(safe-area-inset-bottom, 0px));
  max-height: calc(100vh - 32px - 184px - env(safe-area-inset-top, 0px) - env(safe-area-inset-bottom, 0px)); /* Fallback */

  height: auto; /* Let content determine initial height up to max-height */
  overflow: hidden; /* Essential for flex container with scrollable child */
}

/* Modal header styles */
.modal-header {
  @apply flex items-center justify-between p-4 sm:p-6 border-b border-gray-200 dark:border-gray-700 flex-shrink-0;
  /* No special height calc needed here, its height contributes to the fixed value subtracted from modal-content */
}

/* Modal footer styles */
.modal-footer {
  @apply flex space-x-3 p-4 sm:p-6 border-t border-gray-200 dark:border-gray-700 flex-shrink-0;
  /* No special height calc needed here, its height contributes to the fixed value subtracted from modal-content */
}

/* Modal body styles */
.modal-body {
  @apply flex-1 p-4 sm:p-6;
  overflow-y: auto; /* This makes it scrollable */
  -webkit-overflow-scrolling: touch; /* Improves scrolling on iOS */
  /* Remove any explicit max-height here. flex-1 will make it fill the available space
     within the constrained .modal-content parent. */
  max-height: none; /* Crucially remove this to let flex-1 work */
}

/* Hide scrollbar for Chrome, Safari and Opera */
.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.scrollbar-hide {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}